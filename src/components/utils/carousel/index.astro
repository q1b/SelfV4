<section class="flex items-center justify-center">
	<div
		x-data={`{
				skip:2,
		        next() {
					this.to( ( current, offset ) => current + (this.skip*offset) )
		        },
                prev() {
					this.to( ( current, offset ) => current - (this.skip*offset) )
                },
				to(strategy){
					let slider = this.$refs.slider;
					let current = slider.scrollLeft;
					let offset = slider.firstElementChild.getBoundingClientRect().width;
					slider.scrollTo({left: strategy(current, offset) ,behavior:'smooth'})
				}
		    }`}
		class="flex flex-col w-full"
	>
		<div
			tabindex="0"
			role="region"
			aria-labelledby="carousel-label"
			class="flex gap-x-6"
		>
			<h2 id="carousel-label" class="sr-only" hidden>Carousel</h2>

			<button x-on:click="prev" class="text-6xl">
				<span aria-hidden="true"> ⟨ </span>
				<span class="sr-only" hidden>skip to previous slide</span>
			</button>
			<span id="carousel-content-label" class="sr-only" hidden>Carousel</span>

			<ul
				tabindex="0"
				x-ref="slider"
				role="listbox"
				aria-labelledby="carousel-content-label"
				class="flex w-96  overflow-x-scroll snap-x snap-mandatory"
				x-inview={`{
						selector:".focusAbleItem",
						enterAction:(e)=>{e.removeAttribute('tabindex')},
						leaveAction:(e)=>{e.setAttribute('tabindex','-1')}
					}`}
			>
				{[
					"I am custom text",
					"I am second custom text",
					"I am third custom text",
				].map((text) => (
					<li
						class="w-full snap-start flex-shrink-0 flex flex-col items-center justify-center p-2"
						role="option"
					>
						<div class="w-full bg-white">
							<h2> {text} </h2>
						</div>
						<button class="px-4 py-2 focusAbleItem text-sm">
							Do something
						</button>
					</li>
				))}
			</ul>
			<button x-on:click="next" class="text-6xl">
				<span aria-hidden="true"> ⟩ </span>
				<span class="sr-only">Skip to next slide</span>
			</button>
		</div>
	</div>
</section>
