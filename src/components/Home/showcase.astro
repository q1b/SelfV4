---
import Carousel from "@/components/utils/carousel/carousel.astro";
import CarouselItem from "@/components/utils/carousel/carouselItem.astro";

const t = (color, text) => {
	return `<span class="underline underline-offset-1 ${color}">${text}</span>`;
};

const a = (url, raw) => {
	return `<a href="${url}" class="focusAbleItem inline-flex z-10 gap-x-2 items-center" >${raw}</a>`;
};

const icon = (lang) => {
	if (langData[lang].icon === null) {
		return a(langData[lang].url, `${langData[lang].text}`);
	}
	if (langData[lang].icon.startsWith("h")) {
		return a(
			langData[lang].url,
			`<img src="${langData[lang].icon}" alt="" class="w-auto h-8" /> ${langData[lang].text}`
		);
	}
	return a(langData[lang].url, `${langData[lang].icon} ${langData[lang].text}`);
};

const lib = (lang, library) => {
	return a(
		langData[lang].libs.get(library),
		` ${t("decoration-gray-300 text-gray-400", library)}`
	);
};

const getLogo = (name) => {
	return `https://www.vectorlogo.zone/logos/${name}/${name}-icon.svg`;
};

const langData = {
	powershell: {
		text: t("decoration-sky-300 text-sky-400", "powershell"),
		url: "https://docs.microsoft.com/en-us/powershell/",
		icon: `https://raw.githubusercontent.com/actions/starter-workflows/5104ac42744c84c675b2f9e1168e89f1dd60c059/icons/powershell.svg`,
	},
	svg: {
		text: t("decoration-amber-300 text-yellow-500", "svg"),
		url: "https://docs.microsoft.com/en-us/powershell/",
		icon: `https://www.vectorlogo.zone/logos/w3_svg/w3_svg-official.svg`,
	},
	figma: {
		text: t("decoration-purple-200 text-purple-300", "Figma"),
		url: "https://www.figma.com/",
		icon: getLogo("figma"),
	},
	framer: {
		text: t("decoration-slate-600 text-slate-400", "framer motion"),
		url: "https://www.framer.com/motion/",
		icon: getLogo("framer"),
	},
	git: {
		text: t("decoration-red-300 text-red-400", "git"),
		url: "https://git-scm.com/",
		icon: getLogo("git-scm"),
	},
	vscode: {
		text: t("decoration-red-300 text-red-400", "git"),
		url: "https://git-scm.com/",
		icon: getLogo("git-scm"),
	},
	github: {
		text: t("decoration-slate-300 text-slate-400", "github"),
		url: "https://github.com/",
		icon: getLogo("github"),
	},
	vim: {
		text: t("decoration-slate-300 text-slate-400", "vim"),
		url: "https://www.vim.org/",
		icon: getLogo("vim"),
	},
	neovim: {
		text: t("decoration-slate-200 text-slate-500", "neovim"),
		url: "https://neovim.io/",
		icon: getLogo("neovimio"),
	},
	react: {
		text: t("decoration-slate-200 text-slate-500", "react"),
		url: "https://reactjs.org/",
		icon: `https://rive.app/static/runtimes/logo_react.svg`,
	},
	vue: {
		text: t("decoration-teal-200 text-green-500", "vue"),
		url: "https://v3.vuejs.org/",
		icon: getLogo("vuejs"),
	},
	"petite-vue": {
		text: t("decoration-teal-200 text-green-500", "petite-vue"),
		url: "https://github.com/vuejs/petite-vue",
		icon: null,
	},
	node: {
		text: t("decoration-slate-200 text-slate-500", "node"),
		url: "https://nodejs.dev/",
		icon: getLogo("nodejs"),
	},
	html: {
		text: t("decoration-orange-300 text-orange-400", "HTML"),
		url: "https://www.w3schools.com/html/",
		icon: getLogo("w3_html5"),
	},
	stencil: {
		text: t("decoration-gray-300 text-gray-200", "stencil_js"),
		url: "https://stenciljs.com/",
		icon: getLogo("stenciljs"),
	},
	pug: {
		text: t("decoration-stone-300 text-stone-400", "Pugjs"),
		url: "https://www.w3schools.com/css/",
		icon: getLogo("pugjs"),
	},
	css: {
		text: t("decoration-blue-300 text-blue-400", "CSS"),
		url: "https://www.w3schools.com/css/",
		icon: getLogo("w3_css"),
	},
	tailwindcss: {
		text: t("decoration-teal-300 text-teal-400", "tailwindcss"),
		url: "https://tailwindcss.com",
		icon: getLogo("tailwindcss"),
	},
	javascript: {
		text: t("decoration-amber-300 text-amber-400", "javascript"),
		url: "https://www.javascript.com/",
		icon: getLogo("javascript"),
	},
	typescript: {
		text: t("decoration-blue-300 text-blue-400", "typescript"),
		url: "https://www.typescriptlang.org/",
		icon: getLogo("typescriptlang"),
	},
	python: {
		text: t("decoration-yellow-300 text-yellow-400", "python"),
		url: "https://www.python.org/",
		icon: getLogo("python"),
		libs: new Map([
			["pyautogui", "https://pyautogui.readthedocs.io/en/latest/"],
			["selenium", "https://www.selenium.dev/"],
		]),
	},
	svelte: {
		text: t("decoration-orange-300 text-orange-400", "svelte"),
		url: "https://svelte.dev/",
		icon: "https://upload.wikimedia.org/wikipedia/commons/1/1b/Svelte_Logo.svg",
	},
	sveltekit: {
		text: t("decoration-orange-300 text-orange-400", "svelte kit"),
		url: "https://kit.svelte.dev/",
		icon: "https://upload.wikimedia.org/wikipedia/commons/1/1b/Svelte_Logo.svg",
	},
	alpine: {
		text: t("decoration-blue-600 text-blue-600", "alpinejs"),
		url: "https://alpinejs.dev",
		icon: "https://alpinejs.dev/alpine_long.svg",
	},
	dart: {
		text: t("decoration-cyan-300 text-cyan-400", "dart"),
		url: "https://dart.dev/",
		icon: getLogo("dartlang"),
	},
	flutter: {
		text: t("decoration-cyan-400 text-cyan-500", "flutter"),
		url: "https://flutter.dev/",
		icon: getLogo("flutterio"),
	},
	mongodb: {
		text: t("decoration-lime-400 text-lime-500", "MongoDB"),
		url: "https://www.mongodb.com/",
		icon: getLogo("mongodb"),
	},
	firebase: {
		text: t("decoration-yellow-400 text-yellow-500", "firebase"),
		url: "https://firebase.google.com",
		icon: getLogo("firebase"),
	},
};

const apps = [
	{
		heading: `${icon("sveltekit")} ${icon("mongodb")}&nbsp;${t(
			"inline-flex items-center",
			"Todo Application"
		)}`,
		link: "#",
		learnings: [
			"Designing the Interface",
			"Applying Tailwindcss classes",
			"Learning native html forms functionality",
			"Working with SvelteKit Endpoints",
		],
	},
	{
		heading: `${icon("petite-vue")}&nbsp;${t(
			"inline-flex items-center text-blue-400 ",
			"animation"
		)}&nbsp;${t("inline-flex items-center text-indigo-400 ", "component")}`,
		link: "https://github.com/sacarvy/petiteVueTransition",
		learnings: [
			"Learning about web animation api for first time",
			"Getting to know about directive, expression",
			"Enjoyed working without leaving html, js experience",
			"Making good api for component",
		],
	},
	{
		heading: `${icon("tailwindcss")}&nbsp;${t(
			"inline-flex items-center text-blue-400 ",
			"palette"
		)}&nbsp;${t(
			"inline-flex items-center text-indigo-400 ",
			"generator"
		)}&nbsp; made with ${icon("vue")}`,
		link: "https://tailhelper.netlify.app/",
		learnings: [
			"Getting familiar with hsl(hue,saturation,lightness)",
			"Knowing tailwindcss, color system",
			"Learning about vue reactivity",
			"Learning about web clip api",
		],
	},
];
---

<div class="pt-56 w-full flex flex-col gap-y-6">
	<h1
		class="text-4xl text-cyan-600 dark:text-white shadow-light-underline dark:shadow-dark-underline dark:shadow-indigo-600/40 w-max"
	>
		Projects
	</h1>
	<Carousel
		skip={1}
		scrollbar={false}
		nextBtnClass="hidden sm:block"
		prevBtnClass="hidden sm:block"
	>
		{apps.map((app) => (
			<CarouselItem clx="py-4 sm:p-2 ">
				<div
					class={`sm:aspect-[1.9/1] md:aspect-[2/1] w-full relative flex flex-col p-4 overflow-hidden h-full sm:h-auto sm:rounded-xl`}
				>
					<img
						src="https://play.tailwindcss.com/img/beams.jpg"
						alt=""
						class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 max-w-none"
						width="1308"
					/>
					<div class="absolute inset-0 bg-[url(https://play.tailwindcss.com/img/grid.svg)] bg-center [mask-image:linear-gradient(180deg,white,rgba(255,255,255,0))]"></div>
					<div class="relative flex flex-col content-between h-full justify-between">
						<div class="flex flex-col">
							<h1 class="text-4xl text-slate-600 flex items-center flex-wrap mb-6">
								{app.heading}
							</h1>
							<h2 class="text-2xl mb-4 text-slate-700">
								Things, I enjoyed and learned while making it
							</h2>
							<ul class="ml-10 list-decimal">
								{app.learnings.map((learning) => (
									<li class="text-slate-900 text-lg">{learning}</li>
								))}
							</ul>
						</div>
						<a
							href="#"
							x-ripple
							class="focusAbleItem text-xl px-3 py-2 bg-sky-400 w-max text-white rounded-xl"
						>
							Link to application
						</a>
					</div>
				</div>
			</CarouselItem>
		))}
	</Carousel>
</div>
